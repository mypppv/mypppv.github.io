<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mypppv.github.io</id>
    <title>若水</title>
    <updated>2021-09-04T02:57:24.838Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://mypppv.github.io"/>
    <link rel="self" href="https://mypppv.github.io/atom.xml"/>
    <subtitle>&lt;h2 &gt;&lt;code&gt;上善若水，水善利万物而不争，处众人之所恶，故几于道。&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</subtitle>
    <logo>https://mypppv.github.io/images/avatar.png</logo>
    <icon>https://mypppv.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 若水</rights>
    <entry>
        <title type="html"><![CDATA[ROS搭建l2tp双端vpn]]></title>
        <id>https://mypppv.github.io/post/ros-da-jian-l2tp-shuang-duan-vpn/</id>
        <link href="https://mypppv.github.io/post/ros-da-jian-l2tp-shuang-duan-vpn/">
        </link>
        <updated>2021-09-04T02:40:41.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>server ：</li>
</ul>
<pre><code class="language-bash">/ppp secret add local-address=10.1.1.1 name=wu password=“自定义” profile=default-encryption remote-address=10.1.1.2 service=l2tp
/interface l2tp-server server set enabled=yes
</code></pre>
<ul>
<li>client:<br>
以下：43.132.205.241用server ip替换</li>
</ul>
<pre><code class="language-bash">interface l2tp-client add connect-to=43.132.205.241 disabled=no   name=l2tp_client password=“自定义” user=wu
ip firewall nat add action=masquerade chain=srcnat
ip route add dst-address=43.132.205.247 gateway=10.0.0.1 distance=1
ip route add dst-address=0.0.0.0/0 gateway=10.1.1.1 distance=1
ip dns set allow-remote-requests=yes
</code></pre>
<ul>
<li>
<p>接下来需要：</p>
<pre><code>服务端和客户端都需要伪装，都需执行命令：
/ip firewall nat add chain=srcnat action=masquerade
</code></pre>
<pre><code class="language-bash">client 端
/ip route add gateway=10.1.1.1 dst-address=0.0.0.0/0 distance=1
/ip route add gateway=l2tp_client dst-address=0.0.0.0/0 distance=1
ip route add gateway=10.0.0.1 dst-address=43.132.205.241 distance=1


</code></pre>
<pre><code class="language-bash">server端
/ip route add gateway=&lt;l2tp-wu&gt; dst-address=10.0.0.0/24 distance=1
</code></pre>
</li>
</ul>
<figure data-type="image" tabindex="1"><img src="https://mypppv.github.io/post-images/1630724236710.PNG" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://mypppv.github.io/post-images/1630724110067.PNG" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to install Awall on Alpine Linux]]></title>
        <id>https://mypppv.github.io/post/how-to-install-awall-on-alpine-linux/</id>
        <link href="https://mypppv.github.io/post/how-to-install-awall-on-alpine-linux/">
        </link>
        <updated>2021-09-03T15:48:56.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>本文由 <a href="http://ksria.com/simpread/">简悦 SimpRead</a> 转码， 原文地址 [www.cyberciti.biz]</p>
</blockquote>
<h2 id="how-to-install-awall-on-alpine-linux">How to install Awall on Alpine Linux</h2>
<p>You need to update system using the <a href="https://www.cyberciti.biz/faq/10-alpine-linux-apk-command-examples/" title="See Linux/Unix apk command examples for more info">apk command</a>:<br>
`# apk update &amp;&amp; apk upgrade</p>
<h2 id="install-both-ipv4-and-ipv6-version-of-iptables">Install both IPv4 and IPv6 version of IPtables</h2>
<h1 id="apk-add-ip6tables-iptables">apk add ip6tables iptables</h1>
<h2 id="install-awall">Install awall</h2>
<h1 id="apk-add-u-awall">apk add -u awall</h1>
<h2 id="verify-it">Verify it</h2>
<h1 id="apk-version-awall">apk version awall`</h1>
<p><img src="https://www.cyberciti.biz/media/new/faq/2020/09/How-To-Set-Up-a-Firewall-with-Awall-on-Alpine-Linux.jpg" alt="How To Set Up a Firewall with Awall on Alpine Linux" loading="lazy"><img src="https://www.cyberciti.biz/media/new/faq/2020/09/How-To-Set-Up-a-Firewall-with-Awall-on-Alpine-Linux.jpg" alt="How To Set Up a Firewall with Awall on Alpine Linux" loading="lazy"></p>
<h2 id="understanding-awall-concepts">Understanding Awall concepts</h2>
<p>Awall configuration starts with a single or multiple JSON-formatted files named policy file. The mandatory policies shipped with Alpine Linux are located at /usr/share/awall/mandatory and viewed with the ls command/<a href="https://www.cyberciti.biz/faq/linux-unix-appleosx-bsd-cat-command-examples/" title="See Linux/Unix cat command examples for more info">cat command</a>:<br>
`# ls -l /usr/share/awall/mandatory/</p>
<h1 id="more-usrshareawallmandatoryservicesjson">more /usr/share/awall/mandatory/services.json</h1>
<h1 id="cat-usrshareawallmandatorydefaultsjson">cat /usr/share/awall/mandatory/defaults.json`</h1>
<p><img src="https://www.cyberciti.biz/media/new/faq/2020/09/Awall-default-policy-files.jpg" alt="Awall default policy files on Alpine Linux" loading="lazy"><img src="https://www.cyberciti.biz/media/new/faq/2020/09/Awall-default-policy-files.jpg" alt="Awall default policy files on Alpine Linux" loading="lazy"><br>
However, developers and sysadmins need to install server specific custom policies in /etc/awall directory:<br>
<code># ls /etc/awall/</code><br>
Each awall policy can contain definitions for:</p>
<ol>
<li><strong>Variables</strong> (like $interface_name)</li>
<li><strong>zones</strong> (like internet, lan, red_zone, green_zone, blue_zone) – ones are defined based on a interface and assigned a name to be used in your policies.</li>
<li><strong>interfaces</strong> (like eth0)</li>
<li><strong>policies</strong> – The policy is what tell Awall what to do with when a packet enters or leaves from one of the zones (interfaces).</li>
<li><strong>filters</strong> and NAT rules</li>
<li><strong>services</strong> (like nginx or mysql)</li>
</ol>
<p><strong>snat</strong> – Apply source nat for outgoing packets. Translate from local ip to public ip. In other words your Alpine box act as a router.</p>
<p>Let us see how to configure Awall for a dedicated VM or bare metal server where eth0 is connected to the high-speed Internet, and we need to protect the server. Our goal is to allow ssh (22), ping, and HTTP (80) + HTTPS (4430 ports only.</p>
<h3 id="step-1-prerequisites">Step 1. Prerequisites</h3>
<p>First we must load Linux kernel drivers (modules) for firewall using the modprobe command:<br>
`# modprobe -v ip_tables # IPv4</p>
<h1 id="modprobe-v-ip6_tables-if-ipv6-is-used">modprobe -v ip6_tables # if IPv6 is used</h1>
<h1 id="modprobe-v-iptable_nat-if-nat-is-used-aka-router">modprobe -v iptable_nat # if NAT is used aka router`</h1>
<pre><code>insmod /lib/modules/5.4.43-1-virt/kernel/net/netfilter/x_tables.ko 
insmod /lib/modules/5.4.43-1-virt/kernel/net/ipv4/netfilter/ip_tables.ko ip6_tables
</code></pre>
<p>Please note that the above commands needed only the first time, after awall installation. Next, make the firewall autostart at boot time and autoload the required Linux kernel modules:<br>
`# <strong>rc-update add iptables</strong></p>
<ul>
<li>service ip6tables added to runlevel default</li>
</ul>
<h1 id="rc-update-add-ip6tables"><strong>rc-update add ip6tables</strong></h1>
<ul>
<li>service ip6tables added to runlevel default<code>Please note that Awall is a frontend tool that creates rules. All firewall rules stored in /etc/iptables/ directory. Firewall service can be stopped or restarted any time using the following commands:</code># ls -l /etc/iptables/</li>
</ul>
<h1 id="cat-etciptablesrules-save">cat /etc/iptables/rules-save</h1>
<h1 id="rc-service-iptables-startstoprestartstatus">rc-service iptables {start|stop|restart|status}</h1>
<h1 id="rc-service-ip6tables-startstoprestartstatus">rc-service ip6tables {start|stop|restart|status}`</h1>
<p><img src="https://www.cyberciti.biz/media/new/faq/2020/09/Alpine-Linux-start-stop-and-restart-firewall-command.jpg" alt="Alpine Linux start stop and restart firewall command" loading="lazy"><img src="https://www.cyberciti.biz/media/new/faq/2020/09/Alpine-Linux-start-stop-and-restart-firewall-command.jpg" alt="Alpine Linux start stop and restart firewall command" loading="lazy"></p>
<p>Alpine Linux command to control iptables firewall</p>
<h3 id="step-2-set-up-a-firewall-with-awall-to-protect-alpine-linux-box">Step 2. Set up a firewall with Awall to protect Alpine Linux box</h3>
<p>Create a new file called cloud-server.json as follows to drop all incoming, and outgoing traffic using a text editor. Here is my sample file to protect cloud server hosted at <a href="https://www.linode.com/">Linode</a>:<br>
<code># cat /etc/awall/optional/cloud-server.json</code></p>
<pre><code>{
  &quot;description&quot;: &quot;Default awall policy to protect Cloud server&quot;,
 
  &quot;variable&quot;: { &quot;internet_if&quot;: &quot;eth0&quot; },
 
  &quot;zone&quot;: {
    &quot;internet&quot;: { &quot;iface&quot;: &quot;$internet_if&quot; }
  },
 
  &quot;policy&quot;: [
    { &quot;in&quot;: &quot;internet&quot;, &quot;action&quot;: &quot;drop&quot; },
    { &quot;action&quot;: &quot;reject&quot; }
  ]
 
}
</code></pre>
<p>Next open TCP port 22. In other words, allow incoming SSH access with the maximum ssh login rate limit to avoid attackers/bots brute-forcing into our Alpine cloud server:<br>
<code># cat /etc/awall/optional/ssh.json</code></p>
<pre><code>{
 
    &quot;description&quot;: &quot;Allow incoming SSH access (TCP/22)&quot;,
 
    &quot;filter&quot;: [
        {
            &quot;in&quot;: &quot;internet&quot;,
            &quot;out&quot;: &quot;_fw&quot;,
            &quot;service&quot;: &quot;ssh&quot;,
            &quot;action&quot;: &quot;accept&quot;,
	    &quot;conn-limit&quot;: { &quot;count&quot;: 3, &quot;interval&quot;: 60 }
        }
    ]
}
</code></pre>
<p>Where,</p>
<ul>
<li><strong>&quot;in&quot;: &quot;internet&quot;,</strong> : The internet is our default zone and we are creating incoming policy to open TCP port 22.</li>
<li><strong>&quot;out&quot;: &quot;_fw&quot;,</strong> : AWall has a built-in zone named “_fw” which is the “firewall itself”.</li>
<li><strong>&quot;service&quot;: &quot;ssh&quot;,</strong> : Open SSH port 22.</li>
<li><strong>&quot;action&quot;: &quot;accept&quot;,</strong> : Accept the packet.</li>
<li><strong>&quot;conn-limit&quot;: { &quot;count&quot;: 3, &quot;interval&quot;: 60 }</strong> : Rate limit ssh connections.</li>
</ul>
<h3 id="a-note-about-restricting-ssh-traffic-from-specific-ip-address-or-subnet-cidr">A note about restricting ssh traffic from specific IP address or sub/net (CIDR)</h3>
<p>Update your ssh.json as follows with &quot;src&quot;: &quot;1.2.3.4&quot;, option:</p>
<pre><code>{
    &quot;description&quot;: &quot;Allow incoming SSH access (TCP/22) only from our office VPN at 1.2.3.4&quot;,
    &quot;filter&quot;: [
        {
            &quot;in&quot;: &quot;internet&quot;,
            &quot;out&quot;: &quot;_fw&quot;,
            &quot;service&quot;: &quot;ssh&quot;,
            &quot;action&quot;: &quot;accept&quot;,
            &quot;src&quot;: &quot;1.2.3.4&quot;,
	    &quot;conn-limit&quot;: { &quot;count&quot;: 3, &quot;interval&quot;: 60 }
        }
    ]
}
</code></pre>
<p>For multiple IPs/CIDRs, try it as follows:</p>
<pre><code>      &quot;src&quot;: [ &quot;1.2.3.4&quot;, &quot;192.168.2.0/24&quot;, &quot;202.54.5.1&quot; ],

</code></pre>
<p>Be a good netizen and allow ping/ICMP request to our server with rate limits applied:<br>
<code># cat /etc/awall/optional/ping.json</code></p>
<pre><code>{
 
    &quot;description&quot;: &quot;Allow ping-pong&quot;,
 
    &quot;filter&quot;: [
        {
	      &quot;in&quot;: &quot;internet&quot;,
	      &quot;service&quot;: &quot;ping&quot;,
	      &quot;action&quot;: &quot;accept&quot;,
 	      &quot;flow-limit&quot;: { &quot;count&quot;: 10, &quot;interval&quot;: 6 }
        }
    ]
}
</code></pre>
<p>Finally allow selected outgoing connections for HTTP/HTTPS, DNS, ping, ssh, DNS and NTP protocols:<br>
<code># cat /etc/awall/optional/outgoing.json</code></p>
<pre><code>{
 
    &quot;description&quot;: &quot;Allow outgoing connections for dns, http/https, ssh, ntp, ssh and ping&quot;,
 
    &quot;filter&quot;: [
    	{
            &quot;in&quot;: &quot;_fw&quot;,
            &quot;out&quot;: &quot;internet&quot;,
            &quot;service&quot;: [ &quot;dns&quot;, &quot;http&quot;, &quot;https&quot;, &quot;ssh&quot;, &quot;ntp&quot;, &quot;ping&quot; ],
            &quot;action&quot;: &quot;accept&quot;
	}
    ]
}
</code></pre>
<h3 id="step-3-list-awall-available-policys">Step 3. List Awall available policy(s)</h3>
<p>Run:<br>
<code># awall list</code><br>
Outputs:</p>
<pre><code>cloud-server  disabled  Default awall policy to protect Cloud server
outgoing      disabled  Allow outgoing connections for dns, http/https, ssh, ntp, ssh and ping
ping          disabled  Allow ping-pong
ssh           disabled  Allow incoming SSH access (TCP/22)
</code></pre>
<h3 id="step-4-enables-the-awall-firewall-policy">Step 4. Enables the Awall firewall policy</h3>
<p>Again run:<br>
`# awall enable cloud-server</p>
<h1 id="awall-enable-ssh">awall enable ssh</h1>
<h1 id="awall-enable-ping">awall enable ping</h1>
<h1 id="awall-enable-outgoing">awall enable outgoing`</h1>
<h3 id="step-5-start-the-firewall">Step 5. Start the firewall</h3>
<p>Finally we need to create firewall configuration from the policy files and enables it. In other words the following command will starts the firewall and load all rules:<br>
<code># awall activate</code><br>
You will be prompted to hit the RETURN key as follows:</p>
<pre><code>New firewall configuration activated
Press RETURN to commit changes permanently: 
</code></pre>
<p><strong>NOTE</strong>: After enabling or disabling policy, you always need to run <strong>awall activate</strong> command to update the iptables rules.</p>
<h3 id="step-6-open-incoming-http-and-https-ports">Step 6. Open incoming HTTP and HTTPS ports</h3>
<p>Create a new policy file called apache.json as follows:<br>
<code># vi /etc/awall/optional/apache.json</code></p>
<pre><code>{
    &quot;description&quot;: &quot;Allow incoming Apache HTTP/HTTPS (TCP/80 and 443) ports&quot;,
    &quot;filter&quot;: [
        {
            &quot;in&quot;: &quot;internet&quot;,
            &quot;out&quot;: &quot;_fw&quot;,
            &quot;service&quot;: [ &quot;http&quot;, &quot;https&quot;],
            &quot;action&quot;: &quot;accept&quot;
        }
    ]
}
</code></pre>
<p><a href="https://www.cyberciti.biz/faq/linux-unix-vim-save-and-quit-command/">Save and close the file.</a> Next activate new firewall policy rule:<br>
`# awall enable apache</p>
<h1 id="awall-activate">awall activate`</h1>
<h3 id="step-7-close-port-or-diable-existing-policy">Step 7. Close port or diable existing policy</h3>
<p>Say you have a policy named openvpn.json, and you no longer use the OpenVPN server. We can close the UDP/1194 port as follows by disabling the policy:<br>
`# awall list</p>
<h1 id="awall-disable-openvpn">awall disable openvpn</h1>
<h1 id="awall-activate-2">awall activate`</h1>
<h3 id="step-8-view-iptables-rules">Step 8. View iptables rules</h3>
<p>You can <a href="https://www.cyberciti.biz/faq/how-to-list-all-iptables-rules-in-linux/">list all iptables rules</a> using the following commands:<br>
`# iptables -L -n -v | more</p>
<h1 id="ip6tables-l-n-v-more">ip6tables -L -n -v | more</h1>
<h1 id="ip6tables-s">ip6tables -S</h1>
<h1 id="iptables-s">iptables -S`</h1>
<p><img src="https://www.cyberciti.biz/media/new/faq/2020/09/How-to-list-Alpine-Wall-iptables-rules.jpg" alt="How to list Alpine Wall iptables rules" loading="lazy"><img src="https://www.cyberciti.biz/media/new/faq/2020/09/How-to-list-Alpine-Wall-iptables-rules.jpg" alt="How to list Alpine Wall iptables rules" loading="lazy"><br>
Want to see dropped packets log? Try the dmesg command and <a href="https://www.cyberciti.biz/faq/howto-use-grep-command-in-linux-unix/" title="See Linux/Unix grep command examples for more info">grep command</a>:<br>
`# dmesg</p>
<h2 id="see-dropped-packets-from-ssh-port">See dropped packets from SSH port</h2>
<h1 id="dmesg-grep-w-dpt22">dmesg | grep -w DPT=22`</h1>
<pre><code>[ 3532.077008] IN=eth0 OUT= MAC=f2:3c:92:64:16:11:aa:01:9d:43:81:e6:08:00 SRC=194.180.224.130 DST=172.105.xx.yy LEN=60 TOS=0x00 PREC=0x20 TTL=49 ID=9647 DF PROTO=TCP SPT=33106 DPT=22 WINDOW=29200 RES=0x00 SYN URGP=0 
[ 3532.077347] IN=eth0 OUT= MAC=f2:3c:92:64:16:11:aa:01:9d:43:81:e6:08:00 SRC=194.180.224.130 DST=172.105.xx.yy LEN=60 TOS=0x00 PREC=0x20 TTL=50 ID=35762 DF PROTO=TCP SPT=33110 DPT=22 WINDOW=29200 RES=0x00 SYN URGP=0 
[ 3533.078293] IN=eth0 OUT= MAC=f2:3c:92:64:16:11:aa:01:9d:43:81:e6:08:00 SRC=194.180.224.130 DST=172.105.xx.yy LEN=60 TOS=0x00 PREC=0x20 TTL=50 ID=35763 DF PROTO=TCP SPT=33110 DPT=22 WINDOW=29200 RES=0x00 SYN URGP=0
</code></pre>
<h3 id="step-9-disabling-and-resetting-awall">Step 9. Disabling and resetting Awall</h3>
<p>For any reason you no longer want to use firewall and Awall, you can disable it with following commands:<br>
`# rc-service iptables stop</p>
<h1 id="rc-service-ip6tables-stop">rc-service ip6tables stop`</h1>
<pre><code> * Saving ip6tables state ...                        [ ok ]
 * Stopping firewall ...                             [ ok ]

</code></pre>
<p>Now list and disable all policies:<br>
`# awall list</p>
<h1 id="awall-disable-cloud-server">awall disable cloud-server</h1>
<h1 id="awall-disable-ssh">awall disable ssh</h1>
<h1 id="awall-disable-ping">awall disable ping</h1>
<h1 id="awall-disable-outgoing">awall disable outgoing`</h1>
<p>Finally disable iptables firewall service on your Alpine Linux box using the rc-update command:<br>
`# rc-update del ip6tables</p>
<h1 id="rc-update-del-iptables">rc-update del iptables`</h1>
<pre><code> * service iptables removed from runlevel default
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Alpine Linux 常用命令]]></title>
        <id>https://mypppv.github.io/post/alpine-linux-chang-yong-ming-ling/</id>
        <link href="https://mypppv.github.io/post/alpine-linux-chang-yong-ming-ling/">
        </link>
        <updated>2021-09-02T12:56:52.000Z</updated>
        <content type="html"><![CDATA[<p>1</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Alpine Linux 更换软件源]]></title>
        <id>https://mypppv.github.io/post/alpine-linux-geng-huan-ruan-jian-yuan/</id>
        <link href="https://mypppv.github.io/post/alpine-linux-geng-huan-ruan-jian-yuan/">
        </link>
        <updated>2021-08-31T15:31:19.000Z</updated>
        <content type="html"><![CDATA[<p>更换软件源：</p>
<pre><code>setup-apkrepos
</code></pre>
<pre><code>http://mirrors.aliyun.com/alpine/v3.11/main
http://mirrors.aliyun.com/alpine/v3.11/community
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[alpine linux使用教程]]></title>
        <id>https://mypppv.github.io/post/alpine-linux-shi-yong-jiao-cheng/</id>
        <link href="https://mypppv.github.io/post/alpine-linux-shi-yong-jiao-cheng/">
        </link>
        <updated>2021-08-31T15:11:52.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>本文由 <a href="http://ksria.com/simpread/">简悦 SimpRead</a> 转码， 原文地址 <a href="http://www.jichun.wang/archives/161/2021/linux/">www.jichun.wang</a></p>
</blockquote>
<h1 id="alpine-linux使用教程">alpine linux使用教程</h1>
<p><a href="http://www.jichun.wang/archives/161/2021/linux/">2021年3月3日 (2021年6月8日)</a> <a href="http://www.jichun.wang/archives/author/klinux/">Wang Jichun</a></p>
<h2 id="一-安装">一、安装</h2>
<p>官方网站：</p>
<p><a href="https://www.alpinelinux.org/">https://www.alpinelinux.org/</a></p>
<p>下载镜像：<a href="https://www.alpinelinux.org/downloads/">https://www.alpinelinux.org/downloads/</a></p>
<blockquote>
<p>这里选择针对虚拟化优化的版本<br>
<img src="https://mypppv.github.io/post-images/1630423291819.jpg" alt="" loading="lazy"></p>
</blockquote>
<p>这里使用VM虚拟机安装，创建虚拟机选择：</p>
<figure data-type="image" tabindex="1"><img src="https://mypppv.github.io/post-images/1630423170678.jpg" alt="" loading="lazy"></figure>
<blockquote>
<p>启动后进入:<br>
<img src="https://mypppv.github.io/post-images/1630423309831.jpg" alt="" loading="lazy"></p>
</blockquote>
<blockquote>
<p>输入用户名：root</p>
</blockquote>
<blockquote>
<p>设置系统参数：setup-alpine，回车后选择键盘布局，这里选择us</p>
</blockquote>
<blockquote>
<p>选择变体键盘布局，选择us</p>
</blockquote>
<blockquote>
<p>输入主机名：</p>
</blockquote>
<blockquote>
<p>初始化网卡，直接回车：</p>
<p>配置使用dhcp获取地址，直接回车（两次回车）：</p>
</blockquote>
<blockquote>
<p>设置开机密码：</p>
</blockquote>
<blockquote>
<p>设置时区：</p>
</blockquote>
<blockquote>
<p>设置上网代理：</p>
</blockquote>
<blockquote>
<p>设置NTP客户端，使用chrony同步时间，回车：</p>
</blockquote>
<blockquote>
<p>选择镜像仓库，按‘f’键选择最快的镜像源，这里会进行测速，会有点慢，也可以选择第一项，添加国内的源：</p>
</blockquote>
<blockquote>
<p>选择SSH服务端：openssh</p>
</blockquote>
<blockquote>
<p>选择安装磁盘：</p>
</blockquote>
<p>alpine是可以运行在内存中的，可以不安装到磁盘，我这里选择安装到了磁盘。</p>
<blockquote>
<p>选择磁盘格式：我选sys</p>
<p>sys：传统的硬盘安装，创建三个分区，/boot、交换和 /（文件系统根）。</p>
<p>data：系统运行在内存中但是交换分区和整个 /var目录会创建两个新创建的分区，持久化数据。</p>
</blockquote>
<blockquote>
<p>磁盘清空确认：</p>
</blockquote>
<blockquote>
<p>安装完成：</p>
</blockquote>
<blockquote>
<p>输入reboot重启主机</p>
</blockquote>
<blockquote>
<p>输入root和密码进入系统：</p>
</blockquote>
<h2 id="二-网络配置">二、网络配置</h2>
<h3 id="21-ip配置">2.1、IP配置</h3>
<p>IP配置文件：/etc/network/interfaces</p>
<pre><code>`shortname:~# cat /etc/network/interfaces
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet dhcp
        hostname alpine` Copy
</code></pre>
<h4 id="ipv4-dhcp配置"><strong>IPv4 DHCP配置</strong></h4>
<pre><code>`auto eth0
iface eth0 inet dhcp
        hostname alpine` Copy
</code></pre>
<h4 id="ipv4-静态地址配置">IPv4 静态地址配置</h4>
<pre><code>`iface eth0 inet static
        address 192.168.1.150
        netmask 255.255.255.0
        gateway 192.168.1.1` Copy
</code></pre>
<p>多地址配置</p>
<pre><code>`iface eth0 inet static
        address 192.168.1.150/24
        gateway 192.168.1.1

iface eth0 inet static
        address 192.168.1.151/24` Copy
</code></pre>
<p>重启网络服务</p>
<pre><code>`/etc/init.d/networking restart` Copy
</code></pre>
<h3 id="22-配置dns">2.2、配置DNS</h3>
<pre><code> `echo 'nameserver 223.5.5.5' &gt; /etc/resolv.conf` Copy
</code></pre>
<h3 id="23-修改主机名">2.3、修改主机名</h3>
<pre><code>`echo &quot;alpine.jichun.wang&quot; &gt; /etc/hostname` Copy
</code></pre>
<p>立刻生效</p>
<pre><code>`hostname -F /etc/hostname` Copy
</code></pre>
<h3 id="24-配置root用户使用ssh登陆主机不安全可以不用开启使用普通用户登陆在su到root">2.4、配置root用户使用SSH登陆主机（不安全，可以不用开启，使用普通用户登陆，在su到root）</h3>
<blockquote>
<p>这步操作不安全，非必要可不操作</p>
</blockquote>
<p>alpine默认情况不允许root用户使用密码登陆，开启root用户使用密码登陆：</p>
<pre><code>`# 允许root用户使用密码登陆
echo &quot;PermitRootLogin yes&quot; &gt;&gt; /etc/ssh/sshd_config
# 重启sshd服务
rc-service sshd restart` Copy
</code></pre>
<h2 id="三-修改国内源">三、修改国内源</h2>
<p>配置文件：/etc/apk/repositories</p>
<pre><code>`http://mirrors.ustc.edu.cn/alpine/v3.12/main
http://mirrors.ustc.edu.cn/alpine/v3.12/community` Copy
</code></pre>
<h2 id="四-软件包管理">四、软件包管理</h2>
<h3 id="41-软件安装卸载">4.1、软件安装卸载</h3>
<pre><code>`shortname:~# apk --help
apk-tools 2.10.5, compiled for x86_64.

Installing and removing packages:
  add       Add PACKAGEs to 'world' and install (or upgrade) them, while ensuring that all dependencies are met
  del       Remove PACKAGEs from 'world' and uninstall them

System maintenance:
  fix       Repair package or upgrade it without modifying main dependencies
  update    Update repository indexes from all remote repositories
  upgrade   Upgrade currently installed packages to match repositories
  cache     Download missing PACKAGEs to cache and/or delete unneeded files from cache

Querying information about packages:
  info      Give detailed information about PACKAGEs or repositories
  list      List packages by PATTERN and other criteria
  search    Search package by PATTERNs or by indexed dependencies
  dot       Generate graphviz graphs
  policy    Show repository policy for packages

Repository maintenance:
  index     Create repository index file from FILEs
  fetch     Download PACKAGEs from global repositories to a local directory
  verify    Verify package integrity and signature
  manifest  Show checksums of package contents

Use apk &lt;command&gt; --help for command-specific help.
Use apk --help --verbose for a full command listing.

This apk has coffee making abilities.` Copy
</code></pre>
<p>安装vim</p>
<pre><code>`apk add vim` Copy
</code></pre>
<p>卸载vim</p>
<pre><code>`apk del vim` Copy
</code></pre>
<p>查询软件包</p>
<pre><code> `apk search vim` Copy
</code></pre>
<h3 id="42-系统更新升级">4.2、系统更新升级</h3>
<p>更新软件索引</p>
<pre><code>`apk update` Copy
</code></pre>
<p>--no-cache：禁用缓存安装软件包</p>
<pre><code>`apk add --no-cache vim` Copy
</code></pre>
<p>从第三方的仓库安装软件</p>
<pre><code>`apk add docker --update-cache --repository http://mirrors.ustc.edu.cn/alpine/v3.4/main/ --allow-untrusted` Copy
</code></pre>
<p>upgrade：升级系统</p>
<pre><code>`apk upgrade` Copy
</code></pre>
<h3 id="42-常用软件">4.2、常用软件</h3>
<ul>
<li>ss：查看主机端口 <code>apk add iproute2</code></li>
</ul>
<pre><code>`# 显示tcp监听端口
ss -tl
# 显示tcp监听端口和进程
ss -ptl
# 显示监听和已建立的链接
ss -ta
# 显示socket的使用
ss -s` Copy
</code></pre>
<ul>
<li>drill：dns解析</li>
</ul>
<p><code>apk add drill</code></p>
<ul>
<li>wget curl vim</li>
</ul>
<p><code>apk add wget curl vim</code></p>
<h2 id="五-基本管理操作">五、基本管理操作</h2>
<h3 id="51-安装防火墙">5.1、安装防火墙</h3>
<p>安装防火墙</p>
<pre><code>`# iptables
apk add iptables

# 设置开机启动
rc-update add iptables 

# 保存防火墙规则
/etc/init.d/iptables save` Copy
</code></pre>
<h3 id="52-时间管理">5.2、时间管理</h3>
<p>apk add tzdata<br>
ls /usr/share/zoneinfo</p>
<p>cp /usr/share/zoneinfo/Europe/Brussels /etc/localtime</p>
<p>echo &quot;Europe/Brussels&quot; &gt; /etc/timezone<br>
date</p>
<p>apk del tzdata</p>
<h3 id="53-主机关机重启">5.3、主机关机重启</h3>
<pre><code>`# 关机
poweroff
# 重启
reboot` Copy
</code></pre>
<h3 id="54-服务管理">5.4、服务管理</h3>
<p>服务启停</p>
<pre><code>`service sshd start
service sshd stop
service sshd restart
# 或者
rc-service sshd start
rc-service sshd stop
rc-service sshd restart` Copy
</code></pre>
<h3 id="55-开机启动">5.5、开机启动</h3>
<p>rc-update主要用于不同运行级增加或者删除服务。</p>
<pre><code>`rc-update add sshd boot #增加一个服务
rc-update del sshd boot #删除一个服务` Copy
</code></pre>
<p>rc-status 主要用于运行级的状态管理。</p>
<pre><code>`nas:~# rc-status
Runlevel: default
 crond                                                             [  started  ]
 chronyd                                                           [  started  ]
 sshd                                                              [  started  ]
 acpid                                                             [  started  ]
Dynamic Runlevel: hotplugged
Dynamic Runlevel: needed/wanted
 sysfs                                                             [  started  ]
 fsck                                                              [  started  ]
 root                                                              [  started  ]
 localmount                                                        [  started  ]
Dynamic Runlevel: manual` Copy
</code></pre>
<h3 id="56-alpine-linux的运行级别">5.6、Alpine Linux的运行级别</h3>
<ul>
<li>sysinit 内存启动模式</li>
<li>boot 普通模式（常用模式）</li>
<li>single 单用户模式</li>
<li>reboot 重启模式</li>
<li>shutdown 关机模式</li>
</ul>
<p>修改运行级别</p>
<pre><code>`openrc single` Copy
</code></pre>
<h2 id="六-常见软件安装">六、常见软件安装</h2>
<h3 id="61-mysql">6.1、mysql</h3>
<p>参考链接：<a href="https://wiki.alpinelinux.org/wiki/Production_DataBases_:_mysql">https://wiki.alpinelinux.org/wiki/Production_DataBases_:_mysql</a></p>
<p>安装，这里安装的是mariadb：</p>
<pre><code>`apk add mysql mysql-client` Copy
</code></pre>
<p>初始化数据库</p>
<pre><code>`mysql_install_db --user=mysql --datadir=/var/lib/mysql

rc-service mariadb start

mysqladmin -u root password toor` Copy
</code></pre>
<h3 id="62-安装nginx">6.2、安装nginx</h3>
<pre><code>`# 安装
apk add  nginx
# 启动
service nginx start
# 开机启动
rc-update add nginx` Copy
</code></pre>
<h3 id="63-安装nfs">6.3、安装NFS</h3>
<p>安装软件包</p>
<pre><code>`apk add nfs-utils` Copy
</code></pre>
<p>设置开机启动</p>
<pre><code>`rc-update add nfs` Copy
</code></pre>
<p>修改配置文件：<code>vim /etc/exports</code></p>
<pre><code>`/nfs 192.168.3.0/24(rw,no_root_squash)` Copy
</code></pre>
<p>启动服务：</p>
<pre><code>`rc-service nfs start` Copy
</code></pre>
<p>NFS参数解释</p>
<pre><code>`rw                # 客户端对共享的目录可读写
ro                # 客户端对共享的目录只读不可写
sync              # 同步模式，也就是把内存的数据实时写入硬盘，但这样会降低磁盘效率
async             # 非同步模式，也就是每隔一段时间才会把内存的数据写入硬盘，能保证磁盘效率，但当异常宕机/断电时，会丢失内存里的数据
no_root_squash    # 客户端挂载NFS共享目录后，客户端上的root用户不受这些挂载选项的限制，权限很大
root_squash       # 跟no_root_squash相反，客户端上的root用户受到这些挂载选项的限制，被当成普通用户
all_squash        # 客户端上的所有用户在使用NFS共享目录时都被限定为一个普通用户
anonuid           # 上面的几个squash用于把客户端的用户限定为普通用户，而anouid用于限定这个普通用户的uid，这个uid与服务端的/etc/passwd文件相对应，如：anouid=1000
                  # 比如我客户端用xiaoming这个用户去创建文件，那么服务端同步这个文件的时候，文件的属主会变成服务端的uid(1000)所对应的用户
anongid           # 同上，用于限定这个普通用户的gid` Copy
</code></pre>
<h2 id="七-docker中使用alpine">七、docker中使用alpine</h2>
<p>拉取镜像：</p>
<p><a href="https://hub.docker.com/_/alpine?tab=tags">https://hub.docker.com/_/alpine?tab=tags</a></p>
<pre><code>`docker pull alpine` Copy
</code></pre>
<p>docker镜像构建中常用的命令：</p>
<p>设置时区：</p>
<pre><code>`apk add --no-cache tzdata &amp;&amp;
cp /usr/share/zoneinfo/Europe/Brussels /etc/localtime &amp;&amp;
echo &quot;Asia/Shanghai&quot; &gt;  /etc/timezone &amp;&amp;
apk del --no-cache tzdata` Copy
</code></pre>
<p><a href="http://www.jichun.wang/archives/category/linux/">Linux</a><a href="http://www.jichun.wang/archives/tag/alpine/">alpine</a>，<a href="http://www.jichun.wang/archives/tag/linux/">Linux</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[freebsd使用bound作为dns服务器]]></title>
        <id>https://mypppv.github.io/post/freebsd-shi-yong-bound-zuo-wei-dns-fu-wu-qi/</id>
        <link href="https://mypppv.github.io/post/freebsd-shi-yong-bound-zuo-wei-dns-fu-wu-qi/">
        </link>
        <updated>2021-08-29T14:41:07.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>
<p>安装pkg，shell输入pkg即可安装</p>
</li>
<li>
<p>安装unbound</p>
<pre><code>pkg install unbound
</code></pre>
</li>
<li>
<p>配置文件  /usr/local/etc/unbound/unbound.conf</p>
</li>
</ul>
<pre><code>##########################
# Unbound Configuration
##########################

# Server configuration
server:
chroot: /mnt
username: unbound
directory: /mnt
root-hints: /mnt/root.hints
use-syslog: yes
port: 53
verbosity: 1
extended-statistics: no
log-queries: no
hide-identity: no
hide-version: no
harden-referral-path: no
do-ip4: yes
do-ip6: yes
do-udp: yes
do-tcp: yes
do-daemonize: yes
so-reuseport: yes
module-config: &quot;iterator&quot;
cache-max-ttl: 86400
cache-min-ttl: 0
harden-dnssec-stripped: no
serve-expired: yes
outgoing-num-tcp: 50
incoming-num-tcp: 50
num-queries-per-thread: 4096
outgoing-range: 8192
infra-host-ttl: 900
infra-cache-numhosts: 50000
unwanted-reply-threshold: 0
jostle-timeout: 500
msg-cache-size: 512m
rrset-cache-size: 1024m
num-threads: 1
msg-cache-slabs: 2
rrset-cache-slabs: 2
infra-cache-slabs: 2
key-cache-slabs: 2

prefetch: yes
prefetch-key: yes

# Interface IP(s) to bind to
interface: 127.0.0.1
interface: 0.0.0.0 #本机ip地址
interface: ::1
# DNS Rebinding
# For DNS Rebinding prevention
# All these addresses are either private or should not be routable in the global IPv4 or IPv6 internet.
# IPv4 Addresses
private-address: 0.0.0.0/8       # Broadcast address
private-address: 10.0.0.0/8
private-address: 100.64.0.0/10
private-address: 127.0.0.0/8     # Loopback Localhost
private-address: 169.254.0.0/16
private-address: 172.16.0.0/12
private-address: 192.0.2.0/24    # Documentation network TEST-NET
private-address: 192.168.0.0/16
private-address: 198.18.0.0/15   # Used for testing inter-network communications
private-address: 198.51.100.0/24 # Documentation network TEST-NET-2
private-address: 203.0.113.0/24  # Documentation network TEST-NET-3
private-address: 233.252.0.0/24  # Documentation network MCAST-TEST-NET
#
# IPv6 Addresses
#
private-address: ::1/128         # Loopback Localhost
private-address: 2001:db8::/32   # Documentation network IPv6
private-address: fc00::/8        # Unique local address (ULA) part of &quot;fc00::/7&quot;, not defined yet
private-address: fd00::/8        # Unique local address (ULA) part of &quot;fc00::/7&quot;, &quot;/48&quot; prefix group
private-address: fe80::/10       # Link-local address (LLA)

# Access lists
include: /mnt/access_lists.conf
# Static host entries
include: /mnt/host_entries.conf
# DHCP leases (if configured)
include: /mnt/dhcpleases.conf
# Domain overrides
include: /mnt/domainoverrides.conf
remote-control:
    control-enable: yes
    control-interface: 127.0.0.1
    control-port: 953
    server-key-file: /mnt/unbound_server.key
    server-cert-file: /mnt/unbound_server.pem
    control-key-file: /mnt/unbound_control.key
    control-cert-file: /mnt/unbound_control.pem
forward-zone:
  name: .
  forward-addr: 223.5.5.5
	forward-addr: 180.76.76.76
	forward-addr: 223.6.6.6
	forward-addr: 114.114.114.114
	forward-addr: 8.8.8.8
	forward-addr: 8.8.4.4

</code></pre>
<ul>
<li>
<p>其中涉及的一些外部文件</p>
<p>https://github.com/mypppv/myconfig/blob/6ab4aa8e250155b55d508c4532c305ebc4c75fc2/unbound_config.zip</p>
<p>下载之后解压拷贝到 /mnt即可</p>
</li>
<li>
<p>以下是unbound常见命令</p>
<pre><code>unbound               unbound-checkconf     unbound-control-setup
unbound-anchor        unbound-control       unbound-host
</code></pre>
</li>
<li>
<p>启动unbound</p>
<pre><code>unbound
</code></pre>
</li>
<li>
<p>设置开机启动</p>
<pre><code>ee /etc/rc
#增加 
unbound_enable=&quot;YES&quot;
</code></pre>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[freebsd 设置local-unbound]]></title>
        <id>https://mypppv.github.io/post/freebsd-she-zhi-local-unbound/</id>
        <link href="https://mypppv.github.io/post/freebsd-she-zhi-local-unbound/">
        </link>
        <updated>2021-08-29T14:40:29.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>
<p>先设置本地dns服务器，修改/etc/resolv.conf</p>
<pre><code>root@freebsd:~ # cat /etc/resolv.conf
# Generated by resolvconf
nameserver 223.5.5.5
nameserver 180.76.76.76
nameserver 223.6.6.6
nameserver 114.114.114.114
nameserver 8.8.8.8
nameserver 8.8.4.4
nameserver 127.0.0.1
options edns0
</code></pre>
<p>设置local-unbound 开机启动：</p>
</li>
</ul>
<pre><code> sysrc local_unbound_enable=YES
</code></pre>
<ul>
<li>
<p>上述设置，会在下次启动后生效，开机启动</p>
</li>
<li>
<p>立即启动的方法如下：</p>
<pre><code> service local_unbound onestart
 service local_unbound onerestart #重启
</code></pre>
<pre><code>root@freebsd:~ # service local_unbound onestart
Performing initial setup.
destination:
Extracting forwarders from /etc/resolv.conf.
/var/unbound/forward.conf created
/var/unbound/lan-zones.conf created
/var/unbound/control.conf created
/var/unbound/unbound.conf created
/etc/resolvconf.conf created
Original /etc/resolv.conf saved as /var/backups/resolv.conf.20210829.203646
Starting local_unbound.
</code></pre>
</li>
<li>
<p>注意：/var/unbound/forward.conf 是不可手动更改的，如果想更改，方法如下：</p>
<pre><code>1、设置本地dns服务器，修改/etc/resolv.conf，增加nameserver
2、运行命令：local-unbound-setup
</code></pre>
</li>
<li>
<p>典型DNS服务器如下：</p>
<pre><code>nameserver 223.5.5.5
nameserver 180.76.76.76
nameserver 223.6.6.6
nameserver 114.114.114.114
nameserver 8.8.8.8
nameserver 8.8.4.4
</code></pre>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[freebsd 查看端口占用]]></title>
        <id>https://mypppv.github.io/post/freebsd-cha-kan-duan-kou-zhan-yong/</id>
        <link href="https://mypppv.github.io/post/freebsd-cha-kan-duan-kou-zhan-yong/">
        </link>
        <updated>2021-08-29T12:33:55.000Z</updated>
        <content type="html"><![CDATA[<p>使用25端口占用情况，执行 sockstat -4l | grep 25 即可：</p>
<pre><code>root@freebsd:~ #  sockstat -4l | grep 25
root     sendmail   820   3  tcp4   127.0.0.1:25          *:*
</code></pre>
<p>可以看到25端口的进行号是38386，通过 kill -9 38386 杀掉该进程：</p>
<p>占用25端口的进行号已被杀掉。</p>
<p>补充说明：</p>
<p>sockstat -4l ——可以查看侦听端口的程序，其中4表示ipv4，l表示listen</p>
<p>sockstat -4c ——可以查看已建立的连接状况。</p>
<p>sockstat -4 ——等于上述两个命令的和。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[# FreeBSD开启SSH远程登录]]></title>
        <id>https://mypppv.github.io/post/freebsd-kai-qi-ssh-yuan-cheng-deng-lu/</id>
        <link href="https://mypppv.github.io/post/freebsd-kai-qi-ssh-yuan-cheng-deng-lu/">
        </link>
        <updated>2021-08-29T11:30:52.000Z</updated>
        <content type="html"><![CDATA[<p>1、安装时选择上SSH，或者源码安装SSH<br>
2、使用root登陆系统（初始无密码）<br>
4、编辑/etc/rc.conf，添加一行sshd_enable=&quot;YES&quot;<br>
5、编辑/etc/ssh/sshd_config，将<br>
#PermitRootLogin no改为PermitRootLogin yes //允许root登陆<br>
#PasswordAuthentication no改为PasswordAuthenticationyes//使用系统PAM认证<br>
#PermitEmptyPasswords no改为PermitEmptyPasswords no//不允许空密码</p>
<p>修改端口号：/etc/ssh/sshd_config</p>
<p>#port=22改为 Port=number（你想修改的数字）</p>
<p>保存退出<br>
6、启动SSHD服务，/etc/rc.d/sshd onestart<br>
7、查看服务是否启动，netstat -an，如果看到22端口有监听，恭喜！！！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[windows使用cmd命令快速设置网卡地址]]></title>
        <id>https://mypppv.github.io/post/windows-shi-yong-cmd-ming-ling-kuai-su-she-zhi-wang-qia-di-zhi/</id>
        <link href="https://mypppv.github.io/post/windows-shi-yong-cmd-ming-ling-kuai-su-she-zhi-wang-qia-di-zhi/">
        </link>
        <updated>2021-08-28T07:35:16.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>一键设置网卡ip地址</li>
</ul>
<pre><code class="language-bash">netsh interface ip set address &quot;eth0&quot; static 10.0.0.158 255.255.255.0 10.0.0.3
netsh interface ip set dns &quot;eth0&quot; static 10.0.0.3
pause
</code></pre>
<p>如下图，网卡名称手动改成了&quot;eth0&quot;<br>
<img src="https://mypppv.github.io/post-images/1630136293101.png" alt="" loading="lazy"></p>
<ul>
<li>一键设置自动获取ip和dns</li>
</ul>
<pre><code class="language-bash">netsh interface ip set address &quot;eth0&quot;  dhcp
netsh interface ip set dns name=&quot;eth0&quot; source=dhcp
pause
</code></pre>
<ul>
<li>升级版脚本,可以自动判断并设置ip地址</li>
</ul>
<pre><code>@echo off
netsh interface ip  show dnsservers | findstr 10.0.0.3
if %errorlevel% NEQ 1 GOTO set_ip_dhcp
:set_ip_static_addr
netsh interface ip set address &quot;eth0&quot; static 10.0.0.158 255.255.255.0 10.0.0.3
netsh interface ip set dns &quot;eth0&quot; static 10.0.0.3
cls
echo &quot;设置了静态ip地址&quot;
pause
exit
:set_ip_dhcp
netsh interface ip set address &quot;eth0&quot;  dhcp
netsh interface ip set dns name=&quot;eth0&quot; source=dhcp
cls
echo &quot;取消了静态ip地址&quot;
pause
exit
</code></pre>
]]></content>
    </entry>
</feed>